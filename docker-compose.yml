version: "3"

services:
  wordpress_db:
    image: mysql:5.7
    container_name: wordpress_db
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WP_DB_NAME}
      MYSQL_USER: ${WP_DB_USER}
      MYSQL_PASSWORD: ${WP_DB_PASS}
    healthcheck:
      test: "/usr/bin/mysql --user=${WP_DB_USER} --password=${WP_DB_PASS} --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10

  # https://docs.docker.com/compose/wordpress/
  # wordpress_image:
  #   image: wordpress:5.5.1-php7.4-fpm-alpine
  #   depends_on:
  #     - wordpress_db
  #   container_name: wordpress_image
  #   restart: always
  #   env_file:
  #     - .env
  #   environment:
  #     WORDPRESS_DB_HOST: wordpress_db:3306
  #     WORDPRESS_DB_NAME: ${WP_DB_NAME}
  #     WORDPRESS_DB_USER: ${WP_DB_USER}
  #     WORDPRESS_DB_PASSWORD: ${WP_DB_PASS}
  #   # Keep your data
  #   volumes: 
  #     - wordpress_data:/var/www/html/

  wordpress_cli:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - wordpress_db
    #  - wordpress_image
    container_name: wordpress_cli
    restart: on-failure
    env_file:
      - .env
    environment:
      WORDPRESS_DB_HOST: wordpress_db:3306
      WORDPRESS_DB_NAME: ${WP_DB_NAME}
      WORDPRESS_DB_USER: ${WP_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WP_DB_PASS}
      WORDPRESS_DEBUG: 'true'
    command: 
      - /bin/sh
      - -c 
      - "/var/www/html/wordpress-entrypoint.sh"

    ports:
      - "${WP_PORT}:80"
    # https://docs.docker.com/compose/compose-file/#volumes
    volumes:
      - wordpress_data:/var/www/html/
      # any plugins used to augment wp-rest --- or act in a middleware function
      - "./build/plugin:/var/www/html/wp-content/plugins/${BUILD_PLUGIN}"
      # actual wordpress theme
      - "./build/theme:/var/www/html/wp-content/themes/${BUILD_THEME}"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - wordpress_db
    ports:
      - 3333:80
    environment:
      PMA_HOST: wordpress_db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      
volumes:
  db_data: {}
  wordpress_data: {}

# broken cause: things are still being done in other containers
# wordpress_cli:
#   depends_on:
#     - wordpress_db
#     - wordpress_image
#   image: wordpress:cli
#   # vstm: This is required to run wordpress-cli with the same
#   # user-id as wordpress. This way there are no permission problems
#   # when running the cli
#   user: xfs
#   # vstm: The sleep 10 is required so that the command is run after
#   # mysql is initialized. Depending on your machine this might take
#   # longer or it can go faster.

#   # https://developer.wordpress.org/cli/commands/search-replace/#examples
#   command: >
#     /bin/sh -c '
#     sleep 10;
#     cd /var/www/html/;
#     '
#   # wp search-replace '${WP_URL}' '${WP_URL}:${WP_PORT}' --recurse-objects --skip-columns=guid --skip-tables=wp_users
#   # wp rewrite flush
#   # vstm: add shared volume
#   volumes:
#     - wp_data:/var/www/html
